name: Build and publish a Docker image to Docker Hub
on:

  # publish on releases, e.g. v2.1.13 (image tagged as "2.1.13" - "v" prefix is removed)
  release:
    types: [ published ]

  # publish on pushes to the main branch (image tagged as "latest")
  push:
    branches:
      - master

env:
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  
jobs:
  docker_publish:
    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        go-version: [ '1.22' ]
        
    steps:
      - uses: actions/checkout@v4

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_IO_ACCESS_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Show Go version
        run: |
          go version

      - name: Extract application version
        shell: bash
        run: |
          APP_VERSION=$(cat ./simple-discord-bot.go|grep ^const\ applic|cut -f5 -d\ |sed 's/\"//g')
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV

      - name: Show application version
        shell: bash
        run: echo $APP_VERSION
        env:
          APP_VERSION: ${{ env.APP_VERSION }}
          
      - name: Install dependencies
        run: |
          go get .

      - name: Build
        run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags "-s -w"
        
      - name: Install UPX
        uses: crazy-max/ghaction-upx@v3
        with:
          install-only: true

      - name: Run UPX
        run: upx ./simple-discord-bot

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          #tags: ${{ steps.meta.outputs.tags }}
          tags: ${{ github.repository }}:${{ env.APP_VERSION }} , ${{ github.repository }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
